# This is the standard library, included by default in all umi programs

ilf void print(string) "[mscorlib]System.Console::WriteLine"
ilf void print(char) "[mscorlib]System.Console::WriteLine"
ilf void print(int32) "[mscorlib]System.Console::WriteLine"
ilf void print(bool) "[mscorlib]System.Console::WriteLine"

ilf void consoleWrite(string) "[mscorlib]System.Console::Write"
ilf string input() "[mscorlib]System.Console::ReadLine"

# TODO: Maybe add inline functions
string input(string prompt) {
    consoleWrite(prompt)
    input()
}

ilf string +(string, string) "string::Concat"

# Arithmetic Operators
il int32 +(int32, int32) "add"
il int32 -(int32, int32) "sub"
il int32 *(int32, int32) "mul"
il int32 /(int32, int32) "div"
il int32 %(int32, int32) "rem"
il int32 -(void, int32) "neg"

# Comparison Operators
ilf bool ==(string, string) "string::op_Equality"
il bool ==(int32, int32) "ceq"
il bool ==(bool, bool) "ceq"
il bool >(int32, int32) "cgt"
il bool <(int32, int32) "clt"
bool >=(int32 a, int32 b) { !(a < b) }
bool <=(int32 a, int32 b) { !(a > b) }

# Logical Operators
# Since these operations are bitwise, I'm thinking to 
# use the same symbols for booleans and integers
il bool &&(bool, bool) "and"
il bool ||(bool, bool) "or"
bool !(void _, bool a) { a == false }
