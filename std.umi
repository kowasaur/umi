# This is the standard library, included by default in all umi programs

il class Void "void" {}
il class Int "int32" {}
il class Bool "bool" {}
il class Char "char" {}
il class String "string" {}

ilf Void print(String) "[mscorlib]System.Console::WriteLine"
ilf Void print(Char) "[mscorlib]System.Console::WriteLine"
ilf Void print(Int) "[mscorlib]System.Console::WriteLine"
ilf Void print(Bool) "[mscorlib]System.Console::WriteLine"

ilf Void consoleWrite(String) "[mscorlib]System.Console::Write"
ilf Void consoleWrite(Int) "[mscorlib]System.Console::Write"
ilf Void consoleWrite(Char) "[mscorlib]System.Console::Write"
ilf String input() "[mscorlib]System.Console::ReadLine"

# TODO: Maybe add inline functions
String input(String prompt) {
    consoleWrite(prompt)
    input()
}

ilf String +(String, String) "string::Concat"

# Arithmetic Operators
il Int +(Int, Int) "add"
il Int -(Int, Int) "sub"
il Int *(Int, Int) "mul"
il Int /(Int, Int) "div"
il Int %(Int, Int) "rem"
il Int -(Void, Int) "neg"

# Comparison Operators
ilf Bool ==(String, String) "string::op_Equality"
il Bool ==(Bool, Bool) "ceq"
il Bool ==(Int, Int) "ceq"
il Bool >(Int, Int) "cgt"
il Bool <(Int, Int) "clt"
Bool >=(Int a, Int b) { !(a < b) }
Bool <=(Int a, Int b) { !(a > b) }

# Logical Operators
il Bool &&(Bool, Bool) "and"
il Bool ||(Bool, Bool) "or"
Bool !(Void _, Bool a) { a == false }

# Bitwise Operators
il Int <<(Int, Int) "shl"
il Int >>(Int, Int) "shr"
il Int &(Int, Int) "and"
il Int |(Int, Int) "or"
