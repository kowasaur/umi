include "./tests/classes.cs"

il class Thing "Thing" {
    ils static mut String string "str"
    ils mut Int number "num"

    ils Thing() ".ctor"
}

class Person {
    mut String name
    Int age

    alias GREETING = "Hello I am "

    Person(String name, Int a) {
        this.name = name
        age = a
        print("Making " + name + " caused a side effect")
    }

    Person(String name) { this(name, 0) } # default age

    Void introduce() {
        Console.write(GREETING + name + ", ")
        print(this.age)
    }

    # Returns the Person's age after `years` years
    Int ageAfterYears(Int years) { age + years }
}

il class IntList "class [mscorlib]System.Collections.Generic.List`1<int32>" {
    ils IntList() ".ctor"
    il Void add(Int) "callvirt void class [mscorlib]System.Collections.Generic.List`1<int32>::Add(!0)"
    il Int get(Int) "callvirt !0 class [mscorlib]System.Collections.Generic.List`1<int32>::get_Item(int32)"
    alias RANDOM_NUMBER = 42
}

IntList add10(IntList i) {
    i.add(10)
    i
}

class Logger {
    static mut String everything_logged

    static Logger() { everything_logged = "" }

    static Void log(String message) {
        print(message)
        everything_logged = everything_logged + message + "\n"
    }
}

Void main() {
    Person p = Person("Larry", 63)
    print(p.name)
    print(p.age)
    p.name = "Barry"
    p.introduce()
    print(p.ageAfterYears(15))
    print(Person("Zack").age)

    mut IntList list = IntList()
    list = add10(list)
    list = add10(list)
    print(list.get(1))
    print(IntList.RANDOM_NUMBER)

    Logger.log("This is a message")
    Logger.log("pog")
    Logger.log("I don't know what to write")
    print(Logger.everything_logged)

    Thing thing = Thing()
    thing.number = 3
    Thing.string = "Thing string"
    print(thing.number)
    print(Thing.string)
}
