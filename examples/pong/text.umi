class Text {
    mut Pointer surface
    mut Pointer texture
    mut SDL_Rect rect
    mut String text_str

    Text(SDL_Rect rect, String inital_text, Pointer renderer) {
        this.rect = rect
        updateText(inital_text, renderer)
    }

    Void updateText(String new_text, SDL_Color color, Pointer renderer) {
        SDL.freeSurface(surface)
        SDL.destroyTexture(texture)
        surface = TTF.renderTextSolid(FONT, new_text, color)
        texture = SDL.createTextureFromSurface(renderer, surface)
        text_str = new_text
    }

    Void updateText(String new_text, Pointer renderer) {
        updateText(new_text, WHITE, renderer)
    }

    Void render(Pointer renderer) {
        handleError(SDL.renderCopy(renderer, texture, Pointer.null(), ref rect))
    }

    static Pointer FONT
    static SDL_Color WHITE
    static SDL_Color BLACK

    static Text() {
        TTF.init()
        FONT = TTF.openFont("assets/FFF_Forward.ttf", 24)
        WHITE.r = Byte(255)
        WHITE.g = Byte(255)
        WHITE.b = Byte(255)
    }
}
